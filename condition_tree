import pandas as pd
import streamlit as st
from streamlit_antd_components import condition_tree

# Sample DataFrame (replace this with actual data from Snowflake or CSV)
df = pd.DataFrame({
    'DateColumn': pd.to_datetime(['2021-01-01', '2021-02-01', '2021-03-01']),
    'Product': ['A', 'B', 'C'],
    'Price': [10, 20, 30]
})

# Manually define columns based on 'Yes' or 'No'
yes_columns = ['DateColumn', 'Product']  # These columns will show a dropdown
no_columns = ['Price']  # These columns will show a text input

# Step 1: Select columns for filtering
filter_columns = st.multiselect("Select Filters", df.columns)

# Step 2: Prepare condition tree configuration
config_data = []
for column in filter_columns:
    if column in yes_columns:  # If the column should show a dropdown
        config_data.append({
            'column': column,
            'filter_type': 'dropdown'
        })
    elif column in no_columns:  # If the column should show a text input
        config_data.append({
            'column': column,
            'filter_type': 'text'
        })

# Step 3: Generate condition tree and SQL query
condition_tree_query = condition_tree(
    config=config_data,
    return_type='sql',
    placeholder="Add Filters",
    always_show_buttons=True
)

# Step 4: Display the generated SQL query
if condition_tree_query:
    sql_query = f"SELECT * FROM your_table WHERE {condition_tree_query} LIMIT 1000"
    st.write("Generated SQL Query:")
    st.code(sql_query)
