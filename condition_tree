import streamlit as st
from streamlit_condition_tree import condition_tree

# Define your list of 826 columns (this is just an example with a few columns for clarity)
columns = [
    'column1', 'column2', 'column3', 'column4', 'column5', 'column6', 
    # ... continue listing your columns here
    'column826'
]

# Define columns where the user can manually type values (free input fields)
free_input_columns = ['column1', 'column3', 'column5']  # Add columns requiring manual input here

# Create the configuration for the condition tree
config = {
    'fields': {}
}

# Loop through columns to create the configuration
for column in columns:
    if column in free_input_columns:
        # Add a free text input for specific columns
        config['fields'][column] = {
            'label': column,
            'type': 'text',  # Free text input
            'mainWidgetProps': {
                'valuePlaceholder': f"Enter value for {column}",
            },
        }
    else:
        # Default input for other columns (could be basic text or another type)
        config['fields'][column] = {
            'label': column,
            'type': 'text',
            'mainWidgetProps': {
                'valuePlaceholder': 'Enter value',
            },
        }

# Generate the condition tree with the configuration
condition_query = condition_tree(
    config,
    return_type='sql',
    placeholder='Empty tree'
)

# Display the generated SQL query
st.write("Generated SQL Query:")
st.write(condition_query)
